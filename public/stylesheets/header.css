.contentContainer{

  width: 100%;
  height: 100%;
  display: block;
}

.contentContainer button{
    border: none;
    background: none;
    margin: auto;
    outline: none;

}

.cloudContent{
  min-height: 100%;
}
header
{
  display: flex;
  position: fixed;
	top: 0;
	left: 0;
	right: 0;
  color: white;
  width: 100%;
  margin: 0;
  padding: 0;
  border: 1px solid white;
  text-transform: uppercase;
  font-family: 'Roboto Mono', monospace;

}

 .playButton{
  filter: invert(100);
}

.StreamBar{
  width: 42%;
  border: 1px solid white;
  font-weight: bolder;
  display: flex;
  align-items: center;
  position: relative;
}

.NowPlaying{
  width: 42%;
  display: flex;
  align-items: center;
  border: 1px solid white;
  color: white;
  font-weight: bolder;
  text-transform: uppercase;
  position: relative;

}

.NowPlaying span{
white-space: pre-wrap;
}

.Live{
  width: 8%;
  min-width: 95px;
  border: 1px solid white;
  display: flex;
  align-items: center;
  background: white;
  color: black;
}

input{
  outline: none;
}

.icons{
  width: 8%;
  min-width: 102px;
  color: white;
  display: flex;
  align-items: center;
}

.imgIcon{
  width: 33.3%;
  border: 1px solid white;
  height: 100%;
  display: flex;
  align-items: center;
}

.imgIcon a{
  display: block;
  margin: auto;
}

.imgIcon img{
  filter: invert(100);
  display: block;
  margin: auto;
}


.location{
  position: absolute;
  right: 0;
  font-size: 12px;
  margin-right: 1%;
}

.label-wrapper
{
  display: inline-block;
  margin-left: 10%;
}


.circle{
  height: 8px;
   width: 8px;
   background-color: #e81717;
   border-radius: 50%;
   display: inline-block;
   animation: flickerAnimation 2s infinite;

}

@keyframes flickerAnimation {
  0% {
    opacity: 1;
  }

  50% {
    opacity: 0;
  }
  100% {
    opacity: 1
  }

}



.modal, .poetry {
  /* This way it could be display flex or grid or whatever also. */
  display: block;

  /* Probably need media queries here */
  width: 600px;
  max-width: 100%;
  font-family: 'Overpass Mono', monospace;
  /*font-family: 'Source Code Pro', sans-serif;*/


  height: 500px;
  max-height: 100%;

  position: fixed;

  z-index: 100;

  left: 50%;
  top: 50%;
  overflow: hidden;

  /* Use this for centering if unknown width/height */
  transform: translate(-50%, -50%);

  /* If known, negative margins are probably better (less chance of blurry text). */
  /* margin: -200px 0 0 -200px; */


 color: white;
}
.closed {
  display: none;
}

.bright{
  opacity: 1.5;
}

.modal-overlay {
  position: fixed;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  z-index: 50;
  background: rgba(0, 0, 0, 0.9);
}
.modal-guts {

  width: 100%;
  height: 100%;
  padding: 0px 30px 30px 30px;
  overflow-y: auto;
  margin-top: 5%;
  font-family: 'Source Code Pro', sans-serif;
  font-weight: bold;

}

.headtop{
  text-align: center;
}

* {
  box-sizing: border-box;
  margin: 0;
  padding: 0;
}

ul {
  margin: 10px 0 10px 30px;
}
li, p {
  margin: 0 0 10px 10px;
}
h1 {
  margin: 0 0 20px 0;
  font-size: medium;
}


.modal .close-button{
  position: absolute;

  /* don't need to go crazy with z-index here, just sits over .modal-guts */
  z-index: 1;

  top: 0;

  /* needs to look OK with or without scrollbar */
  right: 0;

  border: 0;


  font-size: 1.3rem;
}

.metadata{
  display: inline-block;
  vertical-align: middle;

}

.metadata span{
  display: block;
  font-size: 12px;
}

.addSong{
  filter: invert(100);
}

.duration{
  position: absolute;
  right: 0;
}

li img{
  border-radius: 10%;
  margin-right: 10px;
}

.songName{
  color: chocolate;
}

.artistName{
  color: #b32200;
}

.albumName{
  color: saddlebrown;
}

.header-list-item {
    width: 100%;
}

.histContainer {
    display: flex;
}

.header-add-song-icon {
    display: flex;
    margin-left: auto;
    align-items: center;
}

::-webkit-scrollbar {
    width: 0px;
    background: transparent; /* make scrollbar transparent */
}

@media screen and (max-width: 800px) {
  .modal-guts {
  padding:  0px 30px 30px 30px;
  }
}
